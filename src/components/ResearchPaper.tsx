
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, Copy, CheckCircle } from "lucide-react";
import { useState } from "react";
import { toast } from "@/hooks/use-toast";

interface Project {
  id: string;
  title: string;
  description: string;
  difficulty: 'Beginner' | 'Intermediate' | 'Advanced';
  tags: string[];
  category: string;
  user_id: string;
  api_source: string;
  created_at: string;
}

interface ProjectDetail {
  id: string;
  title: string;
  description: string;
  structure: string;
  flow: string;
  roadmap: string;
  pseudoCode: string;
  resources: string[];
  githubLinks: string[];
  project_id: string;
  created_at: string;
}

interface ResearchPaperProps {
  project: Project;
  details: ProjectDetail;
}

export const ResearchPaper = ({ project, details }: ResearchPaperProps) => {
  const [copied, setCopied] = useState(false);

  const generateResearchPaper = () => {
    const currentDate = new Date().toLocaleDateString();
    
    return `
# ${details.title}
## A Comprehensive Project Research Paper

**Author:** AI Project Advisor  
**Date:** ${currentDate}  
**Category:** ${project.category}  
**Difficulty Level:** ${project.difficulty}  

---

## Abstract

${details.description}

This research paper provides a comprehensive analysis and implementation guide for the ${details.title} project. The document covers project structure, development methodology, implementation roadmap, and technical specifications to ensure successful project completion.

---

## 1. Introduction

### 1.1 Project Overview
${details.description}

### 1.2 Project Classification
- **Category:** ${project.category}
- **Difficulty Level:** ${project.difficulty}
- **Tags:** ${project.tags ? project.tags.join(', ') : 'N/A'}

### 1.3 Objectives
The primary objective of this project is to create a functional ${project.category.toLowerCase()} application that demonstrates proficiency in relevant technologies and software development practices.

---

## 2. Methodology

### 2.1 Development Approach
${details.flow || 'Standard software development lifecycle approach with iterative development and continuous testing.'}

### 2.2 Project Structure
\`\`\`
${details.structure || 'Project structure will be defined based on chosen technology stack and requirements.'}
\`\`\`

---

## 3. Implementation Plan

### 3.1 Development Roadmap
${details.roadmap || 'A systematic approach to building the project with clear milestones and deliverables.'}

### 3.2 Technical Specifications
${details.pseudoCode || 'Technical implementation details will be defined during the development phase.'}

---

## 4. Resources and References

### 4.1 Learning Resources
${details.resources && details.resources.length > 0 
  ? details.resources.map((resource, index) => `${index + 1}. ${resource}`).join('\n')
  : 'Additional learning resources will be provided based on project requirements.'
}

### 4.2 Code References
${details.githubLinks && details.githubLinks.length > 0 
  ? details.githubLinks.map((link, index) => `${index + 1}. ${link}`).join('\n')
  : 'Relevant code repositories and examples will be identified during development.'
}

---

## 5. Conclusion

This project represents an excellent opportunity to develop practical skills in ${project.category.toLowerCase()} development. The structured approach outlined in this document provides a clear path from conception to completion, ensuring that all aspects of the project are thoroughly planned and executed.

The combination of theoretical understanding and practical implementation will result in a portfolio-worthy project that demonstrates technical competency and problem-solving abilities.

---

## 6. Timeline and Milestones

### Phase 1: Planning and Setup (Week 1)
- Environment setup
- Technology stack finalization
- Initial project structure creation

### Phase 2: Core Development (Weeks 2-4)
- Implementation of core features
- Basic functionality development
- Initial testing and debugging

### Phase 3: Advanced Features (Weeks 5-6)
- Advanced feature implementation
- Performance optimization
- User experience enhancements

### Phase 4: Testing and Deployment (Week 7)
- Comprehensive testing
- Documentation completion
- Deployment and final review

---

**Generated by AI Project Advisor**  
**Document Version:** 1.0  
**Last Updated:** ${currentDate}
`;
  };

  const downloadPaper = () => {
    const paper = generateResearchPaper();
    const blob = new Blob([paper], { type: 'text/markdown' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${details.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_research_paper.md`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast({
      title: "Downloaded!",
      description: "Research paper has been downloaded as a Markdown file.",
    });
  };

  const copyPaper = async () => {
    try {
      const paper = generateResearchPaper();
      await navigator.clipboard.writeText(paper);
      setCopied(true);
      toast({
        title: "Copied!",
        description: "Research paper copied to clipboard.",
      });
      setTimeout(() => setCopied(false), 2000);
    } catch (error) {
      toast({
        title: "Copy failed",
        description: "Failed to copy to clipboard.",
        variant: "destructive"
      });
    }
  };

  return (
    <div className="space-y-6">
      <Card className="shadow-lg border-0 bg-white/90 backdrop-blur-sm">
        <CardHeader>
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0">
            <CardTitle className="text-xl sm:text-2xl text-[#212121]">Research Paper</CardTitle>
            <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3">
              <Button
                onClick={copyPaper}
                variant="outline"
                className="w-full sm:w-auto"
              >
                {copied ? (
                  <CheckCircle className="w-4 h-4 mr-2 text-green-600" />
                ) : (
                  <Copy className="w-4 h-4 mr-2" />
                )}
                Copy
              </Button>
              <Button
                onClick={downloadPaper}
                className="w-full sm:w-auto bg-[#4FC3F7] hover:bg-[#29B6F6] text-white"
              >
                <Download className="w-4 h-4 mr-2" />
                Download
              </Button>
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <div className="bg-[#F9F9F9] p-4 sm:p-6 rounded-lg max-h-[70vh] overflow-y-auto">
            <pre className="whitespace-pre-wrap text-sm leading-relaxed text-[#212121] font-mono">
              {generateResearchPaper()}
            </pre>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
